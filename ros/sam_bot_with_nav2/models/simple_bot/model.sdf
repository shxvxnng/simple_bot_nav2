<?xml version="1.0"?>
<sdf version="1.4">
   <model name="simple_bot">
      <static>false</static>
      <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
      <link name="base_footprint"/>

      <link name="base_link">

         <collision name="base_collision">
         <pose>0 0 0.1 0 0 0</pose>
         <geometry>
           <box>
             <size>0.70 0.39 0.20</size>
           </box>
         </geometry>
       </collision>

       <visual name="base_visual">
         <pose>0 0 -0.05 1.5707963267949 0 3.141592654</pose>
         <geometry>
           <box>
             <size>0.70 0.20 0.39</size>
           </box>
         </geometry>
       </visual>
      </link>

      <link name="imu_link">
          <gravity>true</gravity>
          <sensor name="bmb_imu" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <imu>
              <orientation>
                <x>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-3</stddev>
                  </noise>
                </x>
                <y>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-3</stddev>
                  </noise>
                </y>
                <z>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-3</stddev>
                  </noise>
                </z>
              </orientation>
              <angular_velocity>
                <x>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                  </noise>
                </x>
                <y>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                  </noise>
                </y>
                <z>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                  </noise>
                </z>
              </angular_velocity>
              <linear_acceleration>
                <x>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                  </noise>
                </x>
                <y>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                  </noise>
                </y>
                <z>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                  </noise>
                </z>
              </linear_acceleration>
            </imu>
            <plugin name="simple_bot_imu" filename="libgazebo_ros_imu_sensor.so">
              <initial_orientation_as_reference>false</initial_orientation_as_reference>
              <frame_name>imu_link</frame_name>
              <ros>
                <namespace>/imu</namespace>
                <remapping>~/out:=data</remapping>
              </ros>
            </plugin>
          </sensor>
      </link>

      <link name="gps_link">
         <sensor name="bmb_gps" type="gps">
            <always_on>true</always_on>
            <update_rate>10.0</update_rate>
            <gps>
              <position_sensing>
                <horizontal>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1e-2</stddev>
                  </noise>
                </horizontal>
                <vertical>
                  <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1</stddev>
                  </noise>
                </vertical>
              </position_sensing>
            </gps>
            <plugin name="sam_bot_gps" filename="libgazebo_ros_gps_sensor.so">
              <ros>
                <remapping>~/out:=gps/fix</remapping>
              </ros>
            </plugin>
         </sensor>
      </link>

      <link name="lidar_link">    
          <inertial>
            <pose>0.215 0 0.13 0 0 0</pose>
            <inertia>
              <ixx>0.001</ixx>
              <ixy>0.000</ixy>
              <ixz>0.000</ixz>
              <iyy>0.001</iyy>
              <iyz>0.000</iyz>
              <izz>0.001</izz>
            </inertia>
            <mass>0.114</mass>
          </inertial>

          <collision name="lidar_collision">
            <pose>0.215 0 0.13 0 0 0</pose>
            <geometry>
              <cylinder>
                <radius>0.0508</radius>
                <length>0.18</length>
              </cylinder>
            </geometry>
          </collision>

          <visual name="lidar_visual">
            <pose>0.215 0 0.13 0 0 0</pose>
            <geometry>
              <cylinder>
                <radius>0.0508</radius>
                <length>0.18</length>
              </cylinder>
            </geometry>
            <material>
              <ambient>0.0 0.0 0.0 1.0</ambient>
              <diffuse>0.0 0.0 0.0 1.0</diffuse>
              <specular>0.0 0.0 0.0 1.0</specular>
              <emissive>0.0 0.0 0.0 1.0</emissive>
            </material>
          </visual>

          <sensor name="lidar" type="ray">
            <pose>0.215 0 0.215 0 0 0</pose>
            <always_on>true</always_on>
            <visualize>true</visualize>
            <update_rate>5</update_rate>
            <ray>
              <scan>
                <horizontal>
                  <samples>120</samples>
                  <resolution>1.000000</resolution>
                  <min_angle>-3.14159</min_angle>
                  <max_angle>3.14159</max_angle>
                </horizontal>
              </scan>
              <range>
                <min>0.3</min>
                <max>15.0</max>
                <resolution>0.015</resolution>
              </range>
              <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.01</stddev>
              </noise>
            </ray>
            <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
              <ros>
                <remapping>~/out:=scan</remapping>
              </ros>
              <output_type>sensor_msgs/LaserScan</output_type>
              <frame_name>lidar_link</frame_name>
            </plugin>
          </sensor>
      </link>

      <link name="left_wheel">
         <pose>-0.221 0.23 -0.05 0 1.570796 1.570796</pose>
    
          <collision name="left_wheel_collision">
            <geometry>
              <cylinder>
                <radius>0.14</radius>
                <length>0.06</length>
              </cylinder>
            </geometry>
          </collision>

          <visual name="left_wheel_visual">
            <geometry>
              <cylinder>
                <radius>0.14</radius>
                <length>0.06</length>
              </cylinder>
            </geometry>
          </visual>
      </link>

      <link name="right_wheel">
         <pose>-0.221 -0.23 -0.05 0 1.570796 1.570796</pose>
    
          <collision name="right_wheel_collision">
            <geometry>
              <cylinder>
                <radius>0.14</radius>
                <length>0.06</length>
              </cylinder>
            </geometry>
          </collision>

          <visual name="right_wheel_visual">
            <geometry>
              <cylinder>
                <radius>0.14</radius>
                <length>0.06</length>
              </cylinder>
            </geometry>
          </visual>
      </link>

      <link name='caster'>
         <pose>0.217 0 -0.1 0 0 0</pose>
          <inertial>
            <inertia>
              <ixx>0.001</ixx>
              <ixy>0.000</ixy>
              <ixz>0.000</ixz>
              <iyy>0.001</iyy>
              <iyz>0.000</iyz>
              <izz>0.001</izz>
            </inertia>
            <mass>70.0</mass>
          </inertial>
          <collision name='collision'>
            <geometry>
              <sphere>
                <radius>0.09</radius>
              </sphere>
            </geometry>
            <surface>
              <friction>
                <ode>
                  <mu>0.01</mu>
                  <mu2>0.01</mu2>
                  <slip1>1.0</slip1>
                  <slip2>1.0</slip2>
                </ode>
              </friction>
            </surface>
          </collision>
          <visual name="caster_visual">
            <geometry>
              <sphere>
                <radius>0.09</radius>
              </sphere>
            </geometry>
          </visual>
      </link>

      <joint name="base_joint" type="fixed">
          <parent>base_footprint</parent>
          <child>base_link</child>
          <pose>0 0 0 0 0 0</pose>
      </joint>

      <joint type="revolute" name="left_wheel_hinge">
         <pose>0 0 -0.03 0 0 0</pose>
         <child>left_wheel</child>
         <parent>base_link</parent>
         <axis>
            <xyz>0 1 0</xyz>
         </axis>
      </joint>

      <joint type="revolute" name="right_wheel_hinge">
         <pose>0 0 0.03 0 0 0</pose>
         <child>right_wheel</child>
         <parent>base_link</parent>
         <axis>
            <xyz>0 1 0</xyz>
         </axis>
      </joint>

      <joint name='caster_wheel' type='fixed'>
         <parent>base_link</parent>
         <child>caster</child>
      </joint>

      <joint name="imu_joint" type="fixed">
          <parent>base_link</parent>
          <child>imu_link</child>
          <pose>0 0 0 0 0 0</pose>
      </joint>  

      <joint name="gps_joint" type="fixed">
          <parent>base_link</parent>
          <child>gps_link</child>
          <pose>0 0 0 0 0 0</pose>
      </joint>  
        
      <joint name="lidar_joint" type="fixed">
          <parent>base_link</parent>
          <child>lidar_link</child>
          <pose>0 0 0 0 0 0</pose>
      </joint>

      <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>

         <update_rate>30</update_rate>

         <!-- wheels -->
         <left_joint>left_wheel_hinge</left_joint>
         <right_joint>right_wheel_hinge</right_joint>

         <!-- kinematics -->
         <wheel_separation>0.26</wheel_separation>
         <wheel_diameter>0.2</wheel_diameter>

         <!-- Receive velocity commands on this ROS topic -->
         <command_topic>cmd_vel</command_topic>

         <!-- Publish odometry -->
         <publish_odom>true</publish_odom>

         <!-- The robot_state_publisher package is often used to publish this transform --> 
         <publish_odom_tf>false</publish_odom_tf>

         <!-- The robot_state_publisher package is often used to publish this transform -->   
         <publish_wheel_tf>false</publish_wheel_tf>

         <odometry_topic>odom</odometry_topic>
         <odometry_frame>odom</odometry_frame>
         <robot_base_frame>base_footprint</robot_base_frame>

         <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
         <odometry_source>1</odometry_source>

         <!-- Change the ROS topic we will publish the odometry data to -->
         <ros>
            <remapping>odom:=wheel/odometry</remapping>
         </ros>

         <!-- limits -->
         <max_wheel_torque>20</max_wheel_torque>
         <max_wheel_acceleration>1.0</max_wheel_acceleration>

      </plugin>

      <plugin name="simple_bot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
          <ros>
            <remapping>~/out:=joint_states</remapping>
          </ros>
          <update_rate>30</update_rate>
          <joint_name>left_wheel_hinge</joint_name>
          <joint_name>right_wheel_hinge</joint_name>
      </plugin>

   </model>
</sdf>